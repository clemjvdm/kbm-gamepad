use evdev::Key;

pub trait KbdString {
    fn from_string(string: &str) -> Option<Key>;
}

impl KbdString for Key {
    fn from_string(string: &str) -> Option<Key> {
        match string {
            "a" => Some(Key::KEY_A),
            "b" => Some(Key::KEY_B),
            "c" => Some(Key::KEY_C),
            "d" => Some(Key::KEY_D),
            "e" => Some(Key::KEY_E),
            "f" => Some(Key::KEY_F),
            "g" => Some(Key::KEY_G),
            "h" => Some(Key::KEY_H),
            "i" => Some(Key::KEY_I),
            "j" => Some(Key::KEY_J),
            "k" => Some(Key::KEY_K),
            "l" => Some(Key::KEY_L),
            "m" => Some(Key::KEY_M),
            "n" => Some(Key::KEY_N),
            "o" => Some(Key::KEY_O),
            "p" => Some(Key::KEY_P),
            "q" => Some(Key::KEY_Q),
            "r" => Some(Key::KEY_R),
            "s" => Some(Key::KEY_S),
            "t" => Some(Key::KEY_T),
            "u" => Some(Key::KEY_U),
            "v" => Some(Key::KEY_V),
            "w" => Some(Key::KEY_W),
            "x" => Some(Key::KEY_X),
            "y" => Some(Key::KEY_Y),
            "z" => Some(Key::KEY_Z),
            "1" => Some(Key::KEY_1),
            "2" => Some(Key::KEY_2),
            "3" => Some(Key::KEY_3),
            "4" => Some(Key::KEY_4),
            "5" => Some(Key::KEY_5),
            "6" => Some(Key::KEY_6),
            "7" => Some(Key::KEY_7),
            "8" => Some(Key::KEY_8),
            "9" => Some(Key::KEY_9),
            "0" => Some(Key::KEY_0),
            "enter" => Some(Key::KEY_ENTER),
            "esc" => Some(Key::KEY_ESC),
            "backspace" => Some(Key::KEY_BACKSPACE),
            "tab" => Some(Key::KEY_TAB),
            "space" => Some(Key::KEY_SPACE),
            "minus" => Some(Key::KEY_MINUS),
            "equal" => Some(Key::KEY_EQUAL),
            "leftbrace" => Some(Key::KEY_LEFTBRACE),
            "rightbrace" => Some(Key::KEY_RIGHTBRACE),
            "backslash" => Some(Key::KEY_BACKSLASH),
            "semicolon" => Some(Key::KEY_SEMICOLON),
            "apostrophe" => Some(Key::KEY_APOSTROPHE),
            "grave" => Some(Key::KEY_GRAVE),
            "comma" => Some(Key::KEY_COMMA),
            "dot" => Some(Key::KEY_DOT),
            "slash" => Some(Key::KEY_SLASH),
            "capslock" => Some(Key::KEY_CAPSLOCK),
            "f1" => Some(Key::KEY_F1),
            "f2" => Some(Key::KEY_F2),
            "f3" => Some(Key::KEY_F3),
            "f4" => Some(Key::KEY_F4),
            "f5" => Some(Key::KEY_F5),
            "f6" => Some(Key::KEY_F6),
            "f7" => Some(Key::KEY_F7),
            "f8" => Some(Key::KEY_F8),
            "f9" => Some(Key::KEY_F9),
            "f10" => Some(Key::KEY_F10),
            "f11" => Some(Key::KEY_F11),
            "f12" => Some(Key::KEY_F12),
            "insert" => Some(Key::KEY_INSERT),
            "home" => Some(Key::KEY_HOME),
            "pageup" => Some(Key::KEY_PAGEUP),
            "delete" => Some(Key::KEY_DELETE),
            "end" => Some(Key::KEY_END),
            "pagedown" => Some(Key::KEY_PAGEDOWN),
            "right" => Some(Key::KEY_RIGHT),
            "left" => Some(Key::KEY_LEFT),
            "down" => Some(Key::KEY_DOWN),
            "up" => Some(Key::KEY_UP),
            "numlock" => Some(Key::KEY_NUMLOCK),
            "kp_slash" => Some(Key::KEY_KPSLASH),
            "kp_asterisk" => Some(Key::KEY_KPASTERISK),
            "kp_minus" => Some(Key::KEY_KPMINUS),
            "kp_plus" => Some(Key::KEY_KPPLUS),
            "kp_enter" => Some(Key::KEY_KPENTER),
            "kp_1" => Some(Key::KEY_KP1),
            "kp_2" => Some(Key::KEY_KP2),
            "kp_3" => Some(Key::KEY_KP3),
            "kp_4" => Some(Key::KEY_KP4),
            "kp_5" => Some(Key::KEY_KP5),
            "kp_6" => Some(Key::KEY_KP6),
            "kp_7" => Some(Key::KEY_KP7),
            "kp_8" => Some(Key::KEY_KP8),
            "kp_9" => Some(Key::KEY_KP9),
            "kp_0" => Some(Key::KEY_KP0),
            "kp_dot" => Some(Key::KEY_KPDOT),
            "leftctrl" => Some(Key::KEY_LEFTCTRL),
            "leftshift" => Some(Key::KEY_LEFTSHIFT),
            "leftalt" => Some(Key::KEY_LEFTALT),
            "leftmeta" => Some(Key::KEY_LEFTMETA),
            "rightctrl" => Some(Key::KEY_RIGHTCTRL),
            "rightshift" => Some(Key::KEY_RIGHTSHIFT),
            "rightalt" => Some(Key::KEY_RIGHTALT),
            "rightmeta" => Some(Key::KEY_RIGHTMETA),        
            _ => None,
        }
    }
}
